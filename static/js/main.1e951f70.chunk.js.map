{"version":3,"sources":["redux/auth/auth-selectors.js","components/Navigation.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Input/Input.js","redux/contacts-actions.js","redux/contacts-operation.js","redux/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","views/ContactsView.js","views/HomeView.js","views/LoginView.js","views/RegisterView.js","components/PrivatRoute.js","components/PublicRoute.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetchingCurrent","isFetchingCurrentUser","Navigation","useSelector","to","exact","axios","defaults","baseURL","token","headers","common","Authorization","operations","register","createAsyncThunk","credentials","a","console","log","post","data","Error","logIn","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","UserMenu","dispatch","useDispatch","type","onClick","AuthNav","AppBar","Input","label","value","onChange","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","changeFilter","getContacts","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","onSubmit","e","preventDefault","trim","normalizedName","find","toast","error","contact","actions","then","catch","addContact","autoComplete","target","children","Contact","onDelete","id","ContactsList","useEffect","length","map","contactId","delete","App","HomeView","LoginView","setEmail","password","setPassword","handleChange","RegisterView","PrivatRoute","routeProps","PublicRoute","restricted","shouldRedirect","path","createReducer","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e951f70.chunk.js","sourcesContent":["const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserName = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n    getIsLoggedIn,\n    getUserName,\n    getIsFetchingCurrent\n};\n\nexport default authSelectors;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\nreturn ( \n<nav>\n  <NavLink to=\"/\" exact>\n      Главная страница\n  </NavLink>\n\n  {isLoggedIn && (\n    <NavLink to=\"/contacts\" exact>\n      Контакты\n    </NavLink>)}\n</nav>)\n};\n\nexport default Navigation;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n    console.log(`credentials ${credentials}`);\n    try {\n        const { data } = await axios.post('/users/signup', credentials);\n        token.set(data.token);\n        return data;\n    } catch (error) {\n        throw new Error(error)\n    }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n    try {\n        const { data } = await axios.post('/users/login', credentials);\n        token.set(data.token);\n        return data;\n    } catch (error) {\n        throw new Error(error)\n    }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n    try {\n        await axios.post('users/logout');\n        token.unset();\n    } catch (error) {\n        throw new Error(error)\n    }\n});\n\nconst fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    if (persistedToken === null) {\n        return thunkAPI.rejectWithValue();\n}\n    token.set(persistedToken);\n    try {\n        const { data } = await axios.get('users/current');\n        return data;\n    }catch (error) {\n        throw new Error(error)    \n    }\n    \n})\n\nconst operations = {\n    register,\n    logIn,\n    logOut,\n    fetchCurrentUser\n};\n\nexport default operations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n    user: { name: null, email: null },\n    token: null,\n    isLoggedIn: false,\n    isFetchingCurrentUser:false,\n}\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    extraReducers: {\n        [authOperations.register.fulfilled](state, action) {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n            state.isLoggedIn = true;\n        },\n        [authOperations.logIn.fulfilled](state, action) {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n            state.isLoggedIn = true;\n        },\n        [authOperations.logOut.fulfilled](state, action) {\n            state.user= { name: null, email: null };\n            state.token= null;\n            state.isLoggedIn=false;\n        },\n        [authOperations.fetchCurrentUser.pending](state) {\n            state.isFetchingCurrentUser = true;\n        },\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\n            state.user = action.payload;\n            state.isLoggedIn = true;\n            state.isLoggedIn = false;\n        },\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\n             state.user = action.payload;\n             state.isLoggedIn = true;\n             state.isFetchingCurrentUser = false;\n         },\n         [authOperations.fetchCurrentUser.rejected](state) {\n            state.isFetchingCurrentUser = false;\n         },\n    }\n});\n\nexport default authSlice.reducer;","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div>\n      <span>Приветствую, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink to=\"/register\" exact>\n        Регистрация\n      </NavLink>\n      <NavLink to=\"/login\" exact>\n        Войти\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header>\n      <Navigation />\n      {isLoggedIn ? <UserMenu/> : <AuthNav/>}\n    </header>\n  )\n \n}\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Input({label, type, name, value, onChange}) {\r\n    return (\r\n    <label> {label}\r\n        <input type={type} name={name} value={value} onChange={onChange}/>\r\n    </label>\r\n    )\r\n}\r\n\r\nInput.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccsess');\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccsess');\r\nexport const deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nexport const fetchContactRequest = createAction('phonebook/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('phonebook/fetchContactSuccsess');\r\nexport const fetchContactError = createAction('phonebook/fetchContactError');\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter')\r\n","import axios from 'axios';\r\nimport * as actions from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nexport const addContact = (name,number)=>dispatch => {\r\n    const contact = {\r\n        name,\r\n        number\r\n        \r\n    };\r\n\r\n    dispatch(actions.addContactRequest());\r\n     \r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) =>\r\n            dispatch( actions.addContactSuccess(data) ))\r\n        .catch(error => dispatch(actions.addContactError(error)));\r\n    \r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    \r\n    dispatch(actions.deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`./contacts/${contactId}`)\r\n        .then(() =>\r\n            dispatch(actions.deleteContactSuccess(contactId)))\r\n        .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n      .then(({ data }) =>\r\n          dispatch(actions.fetchContactSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactError(error)));\r\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getError = state => state.contacts.error;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({name}) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);","import React, { Component } from 'react';\r\nimport {useState} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport { toast } from  'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Input from '../Input/Input';\r\nimport {addContact} from '../../redux/contacts-operation'\r\nimport { getContacts } from '../../redux/contacts-selectors';\r\n\r\n\r\nexport default function ContactForm() {\r\n\r\n    const contacts = useSelector((state) => getContacts(state));\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('')\r\n    const [number, setNumber] = useState('')\r\n\r\n    function handleNameChange (e) {\r\n        const value = e.target.value;\r\n        setName(value);\r\n    }\r\n\r\n    function handleNamberChange (e) {\r\n        const value = e.target.value;\r\n        setNumber(value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (name.trim() === '' || number.trim() === '') {\r\n            toast.error('Заполните поле');\r\n            return\r\n        }\r\n\r\n        const normalizedName = name.toLowerCase();\r\n        const hasContact = contacts.find(({name}) => name.toLowerCase() === normalizedName);\r\n        \r\n        if(hasContact) {\r\n            toast.error(`Контакт с именем ${name} уже существует`)\r\n            return\r\n        }\r\n\r\n        dispatch(addContact(name, number))\r\n        reset();\r\n    }\r\n\r\n    function reset () {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return (\r\n        <form key='AddContactForm' onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Input label=\"Name\" type=\"text\" name=\"name\" value={name} onChange={handleNameChange} />\r\n            <Input label=\"Number\" type=\"text\" name=\"number\" value={number} onChange={handleNamberChange} />\r\n            <button type='submit'  children='Add contact'></button>\r\n        </form>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Contact({ contact, onDelete }) {\r\n\r\n        return (\r\n            <li>\r\n                <p>{contact.name} {contact.number}</p> \r\n                <button id={contact.id} onClick={onDelete}>Delete</button>\r\n            </li>          \r\n        )   \r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}","import {useEffect} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux'\r\n\r\nimport Contact from \"./Contact/Contact\";\r\nimport Input from '../Input/Input';\r\n\r\nimport { changeFilter } from '../../redux/contacts-actions';\r\nimport { fetchContacts, deleteContact} from '../../redux/contacts-operation';\r\nimport { getVisibleContacts, getFilter } from '../../redux/contacts-selectors';\r\n\r\n\r\nexport default function ContactsList() {\r\n\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(state => getVisibleContacts(state));\r\n    const value = useSelector((state) => getFilter(state))\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContacts())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <h1>{contacts.length !== 0 ? 'Список контактов' : 'Список контактов пуст'}</h1>\r\n\r\n        {contacts.length > 0 &&\r\n        <> \r\n        <Input label=\"Find contacts by name\" value={value} type=\"text\" name=\"filter\"  onChange={(e) => dispatch(changeFilter(e.target.value))}/>\r\n\r\n        <ul>\r\n            {contacts.map(contact => (<Contact key={contact.id} contact={contact} onDelete={() => dispatch(deleteContact(contact.id))}/>))}\r\n        </ul>\r\n        </>\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\n\n\nexport default function App() {\n  \n  return (\n    <div>\n    <ContactForm />\n    <ContactList />\n  </div>\n  )\n}","import React from 'react';\n\nconst HomeView = () => (\n <h1>Домашняя страница</h1>\n);\n\nexport default HomeView;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n\n      <form onSubmit={handleSubmit} autoComplete=\"on\">\n        <label>\n          Mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div >\n      <h1>Создать аккаунт</h1>\n\n      <form onSubmit={handleSubmit}  autoComplete=\"on\">\n        <label>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label>\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PrivatRoute({children,...routeProps}) {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    return (\n        <Route  {...routeProps}>\n            {isLoggedIn ? children : <Redirect to=\"/login\" />}\n        </Route>\n    );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PublicRoute({children, restricted = false, ...routeProps}) {\n    \n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n    const shouldRedirect = isLoggedIn && restricted;\n    return (\n        <Route {...routeProps}>\n            { shouldRedirect ? <Redirect to='/contacts' /> : children}\n        </Route>\n    );\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\n\nimport AppBar from './components/AppBar';\nimport ContactsView from './views/ContactsView';\nimport HomeView from './views/HomeView';\nimport LoginView from './views/LoginView';\nimport RegisterView from './views/RegisterView';\nimport PrivatRoute from \"./components/PrivatRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nimport { authOperations, authSelectors } from './redux/auth';\n\nexport default function App() {\nconst dispatch = useDispatch();\nconst isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(\n    () => {\n      dispatch(authOperations.fetchCurrentUser());\n    }, [dispatch]\n  );\n\n  return (\n    !isFetchingCurrentUser && (\n      <>\n      <AppBar />\n       \n        <Switch>\n           \n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/login\" restricted>\n            <LoginView />\n          </PublicRoute>\n\n          <PrivatRoute >\n            <ContactsView path=\"/contacts\" />\n          </PrivatRoute>\n\n        </Switch>\n</>\n    )\n  );\n}","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    changeFilter } from './contacts-actions';\r\n\r\n\r\nconst items = createReducer(\r\n    [], {\r\n    [fetchContactSuccess]: (state, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(\r\n    false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContactError]: (state, action) => action.payload,\r\n    [fetchContactRequest]: () => null,\r\n    [addContactRequest]:() => null,\r\n    [deleteContactRequest]:() => null,\r\n    [deleteContactError]: (state, action) => action.payload,\r\n    [addContactError]: (state, action) => action.payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist:['token'],\n}\n\n\nexport const store = configureStore({\n  reducer: {\n    auth:persistReducer(authPersistConfig,authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n         <BrowserRouter>\n          <App />\n          </BrowserRouter>\n        </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}